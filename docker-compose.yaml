version: '2'

services:
    frontend:
        # image: 'othy1010/senna-frontend'
        container_name: senna_front
        build: 
            context: ./senna_front/
        ports: 
            - 3000:3000
        networks:
            - frontend
        links: 
            - backend
        depends_on:
            - backend
        environment:
            - BACKEND_URL=http://backend:8080
        # volumes:
        #     - ./senna_front:/usr/src
        
        
        
    backend:
        # image: 'othy1010/senna-backend'
        build:
            context: ./senna_backend/
        ports: 
            - 8080:8080
        container_name: senna_backend
      
        depends_on:
            - db
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/senna
            - SPRING_DATASOURCE_USERNAME=senna
            - SPRING_DATASOURCE_PASSWORD=12345
            - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop 
            - SPRING_SECURITY_USER_NAME=senna
            - SPRING_SECURITY_USER_PASSWORD=12345
        networks: # Networks to join (Services on the same network can communicate with each other using their name)
            - backend
            - frontend
          
    db:
        image: 'postgres:13.1-alpine'
        container_name: senna_db
        ports: 
            - 5432:5432
        environment:
            - POSTGRES_USER=senna
            - POSTGRES_PASSWORD=12345
        networks:
            - backend 
networks:
  backend:
  frontend:

volumes:
  senna_front: